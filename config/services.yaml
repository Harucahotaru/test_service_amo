# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Service\AmoCrmApi\AmoCrmApiClientFacade:
        arguments:
            $ClientFactory: '@App\Service\AmoCrmApi\AmoCrmApiClientFactoryAdapter'
            $CustomFieldsFactory: '@App\Service\AmoCrmApi\CustomFields\CustomFieldsFactory'

    App\Service\AmoCrmApi\AmoCrmApiClientFactoryAdapter:
        arguments:
            $oAuthConfig: '@App\Service\AmoCrmApi\OAuthConfig'
            $oAuthService: '@App\Service\AmoCrmApi\OAuthService'

    App\Service\AmoCrmApi\OAuthConfig:
        arguments:
            $integrationId: '%env(AMOCRM_CLIENT_ID)%'
            $secretKey: '%env(AMOCRM_SECRET_KEY)%'
            $redirectDomain: '%env(AMOCRM_REDIRECT_URL)%'
            $baseDomain: '%env(AMOCRM_BASE_DOMAIN)%'
            $redirectRoute: '%env(REDIRECT_ROUTE)%'

    App\Service\AmoCrmApi\OAuthService:
        arguments:
            $Client: '@TokenRedisClient'

    TokenRedisClient:
        class: Predis\Client
        arguments:
            $parameters: {'host':'%env(TOKEN_CLIENT_HOST)%', 'port':'%env(TOKEN_CLIENT_PORT)%'}

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
